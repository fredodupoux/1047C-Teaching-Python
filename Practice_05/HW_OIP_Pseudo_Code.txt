--- OIP ---

OUTPUT:     Current Cost of Frames
            Current Discount Amount
            Current Net Amount
            Current Sales Tax
            Current Amount Due

            Total number of customers processed
            Total number of 8x10 picture frames sold
            Total cost of 8x10 picture frames sold
            Total amount of discounts
            Total of sales tax
            Total of amount due


INPUT:      Number of Frames
            Price of frames


PROCESS:    Validate Number of Frames ( > 0 and <= 75) 
            Validate Price of Frames >= 16.95 and  <= 25.95. 
            Calculate Cost Of Frames (Number of Frames * Price of Frames)
            Determine Discount Rate based on Number of Frames
            Calculate Discount Amount (Cost Of Frames * Discount Rate)
            Calculate Net Amount (Cost of Frames â€“ Discount Amount)
            Calculate Sales Tax ( Net Amount * Sales Rate)
            Calculate Amount Due ( Net Amount + Sales Tax)

            Accumulate Number Of Customers
            Accumulate Number Of Frames 
            Accumulate Total cost of 8x10 picture frames sold
            Accumulate Total amount of discounts
            Accumulate Total of sales tax
            Accumulate Total of amount due


--- PSEUDO CODE --- 

--- main ---

# Import modules to access functions
# Print welcome message to user

# Initializing value to get in the loop
#numberOfFrames = 0
#framePrice = 0.00

#WHILE - number of frames is not -1
# Call numberOfFrames = InputNumberOfFrames()
#IF - number of frame is not -1
    # Call framePrice = InputFramePrice()
    #IF - frame price is not -1
        # Call CalculateSales()
    #ELSE
        # Cancel sale without exiting program and Print cancelled sales message
        # Set numberOfFrames = 0
    #ENDIF
#ENDIF    
#ENDWHILE
# Call PrintTotalSales()


--- Input Number Of Frames ---

# numberOfFrames: int = 0
# validNumberOfFrames: bool = False
# WHILE not validNumberOfFrames:
    #TRY
        # numberOfFrames = Input number of frames
        # set validNumberOfFrames = True
        #IF numberOfFrames is not -1:
            #IF number of frames is not in range (MIN_FRAME, MAX_FRAME + 1)
                # Print invalid range message
                # Set validNumberOfFrames = False
            #ENDIF
        #ENDIF
    #EXCEPTION:
        # Print nonnumeric error message
# ENDWHILE
# Return numberOfFrames


--- Input Frame Price ---

# Frame Price float = 0.00
# Valid Frame Price bool = False
#WHILE not validFramePrice:
    #TRY:
        # framePrice: float = Input Price of Frame
        # Set valid Frame Price to True
        #IF framePrice is not -1:
            #IF framePrice is not in range PRICE_RANGE_MIN to PRICE_RANGE_MAX:
                # print invalid range message
                # set valid FramePrice to False
            #ENDIF
        #ENDIF
    #EXCEPTION:
        # Print non numeric error message
# ENDWHILE
# Return Frame Price

--- Get Discount Rate ---

# if numberOfFrames > DISCOUNT_15:
    # return DISCOUNT_15_VALUE
# elif numberOfFrames > DISCOUNT_10:
    # return DISCOUNT_10_VALUE
# elif numberOfFrames > DISCOUNT_5:
    # return DISCOUNT_5_VALUE
# else:
    # return 0.00

--- CalculateSales ---

# Calculate Cost Of Frames
# Call Discount Rate = GetDiscountRate()
# Calculate discount amount
# Calculate net amount
# Calculate Sales Tax
# Calculate Amount Due

# Call SetTotals()

# Print Order details
# Print Cost Of Frames
#IF - Discount > 0 
    # Print Discount 
    # Print Net Amount
#ENDIF    
# Print Sales Tax and 
# Print Total Amount Due

--- GetTotals ---
# Access Accumulators from global variables
# define global total Number Of Customer
# define global total Number Of Frames
# define global total Cost Of Frames
# define global total Discount
# define global total Sales Tax
# define global total Amount Due

# return Accumulators
    total Number Of Customer,
    total Number Of Frames,
    total Cost Of Frames,
    total Discount,
    total Sales Tax,
    total Amount Due


--- Set Totals ---
# Access Accumulators from global variables
# define global total Number Of Customer
# define global total Number Of Frames
# define global total Cost Of Frames
# define global total Discount
# define global total Sales Tax
# define global total Amount Due

# Update Accumulators
# Update total Number Of Customer += 1
# Update total Number Of Frames += number Of Frames
# Update total Cost Of Frames += cost Of Frames
# Update total Discount += discount Amount
# Update total Sales Tax += sales Tax
# Update total Amount Due += amount Due


--- PrintTotalSales ---
# Call GetTotals()

#IF total Number Of Customer <= 0:
    # print Good bye message
#ELSE:
    # print closing sales message
    # Print Final Total Accumulators
    # print sale summary
    # Print Total number of customers
    # Print Total number of frames
    # Print Total Cost of frames
    #IF total Discount > 0 
      # Print Total Discount
    #ENDIF
    # Print Sales Tax 
    # Print Total Amount Due



























# Define Sales Tax 7.5%
# Define price Ranges - PRICE_RANGE_MIN - PRICE_RANGE_MAX
# Define Frame Range - MIN_FRAME - MAX_FRAME
# Define Discount Brackets - DISCOUNT_5 - DISCOUNT_10 - DISCOUNT_15
# Define Discount Values - DISCOUNT_5_VALUE - DISCOUNT_10_VALUE - DISCOUNT_15_VALUE


# Initialize Total Number Of Customer = 0
# Initialize Total Number Of Frames = 0
# Initialize Total Cost Of Frames = 0
# Initialize Total Discount = 0
# Initialize Total Sales Tax = 0
# Initialize Total Amount Due = 0

# Print welcome message to user

# Initializing numberOfFrames, discountRate and validFramePrice before getting in the loop

#WHILE Number of Frames != -1
    #TRY
        #PROMPT: Input number of frames
        #IF - Validate Sentinel value -1
            #IF - numberOfFrames not in range(MIN_FRAME, MAX_FRAME+1)
                # Print range error message to user
            #ELSE - Determine Discount Rate based on Number of Frames
                #IF - Number Of Frames > 15: Discount = 15%
                #ELIF - Number Of Frames > 10: Discount = 10%    
                #ELIF - Number Of Frames > 5: Discount = 5%    
                #ELSE - Discount = 0  
                #ENDIF   
                # Prime validFramePrice to get in next Loop
            #ENDIF

            #WHILE frame price is valid
                #TRY
                    #PROMPT: Input Price of Frame
                    #IF - framePrice < PRICE_RANGE_MIN or framePrice > PRICE_RANGE_MAX:
                        # Print range error message
                    #ELSE
                        # Calculate Cost Of Frames (Number of Frames * Price of Frames)
                        # Calculate discount amount
                        # Calculate net amount
                        # Calculate Sales Tax
                        # Calculate Amount Due
                        # Print and Display formatted output
                        # Display discount and net amount only if discount is applied
                        #IF - Discount > 0 
                            # Print Discount & Net Amount
                        #ENDIF    
                        # Display Sales Tax and Total Amount Due
                        #Accumulte Totals
                        # !validFramePrice to Exit current loop
                    #ENDIF
                #EXCEPTION:     
            #ENDWHILE 
        #ENDIF
    #EXCEPTION:
#ENDWHILE

#IF customer Close Sales
    # Print Goodbye message
#ELSE quit and print Closing sales details
    # Print Final Total Accumulators
    # Display formatted output
    
    #IF - Discount > 0
        # Print Total Discount
    #ENDIF 
    # Display Sales Tax and Total Amount Due
#ENDIF